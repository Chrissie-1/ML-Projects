# -*- coding: utf-8 -*-
"""YOLOv5

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/chrissteven/yolov5.e189e20e-17a9-402b-8ab7-b9194a44f9c3.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20250722/auto/storage/goog4_request%26X-Goog-Date%3D20250722T065154Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3Db20e889644580cce84cf76ab4f659bd6305140cabba761229e20ee78f3adcdbad583b5f730eea861cc64d181e189d2515ac708d5ec021607af7238d036cd0983f6b5fb06268a2a264cfeb88487c0c30b11207d6759204d4d2ed0af1af5159760eea8e467e0612f144fa35611039b76db6689bc388471ab29b9097a20fe572331b914b532ae860ab22ac70d15a349f8ba79de4a020c1def1496ea1040b7195fb04499c4b54873cac4697c1f5931dec491ee49836de9e7bc6e11cf23e774fd391c9530053ccae4855474190a810287fbf029152beced31d355b4e60a24c9e28b4de5d0af8c50807db9767abf49b117a1422dcda058803907a124f452a68a18ab13
"""

# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES,
# THEN FEEL FREE TO DELETE THIS CELL.
# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON
# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR
# NOTEBOOK.
import kagglehub
ultralytics_coco128_path = kagglehub.dataset_download('ultralytics/coco128')

print('Data source import complete.')

# Commented out IPython magic to ensure Python compatibility.
!git clone https://github.com/ultralytics/yolov5  # clone
# %cd yolov5
# %pip install -qr requirements.txt  # install

import torch
import utils
display = utils.notebook_init()  # checks

!python detect.py --weights yolov5s.pt --img 640 --conf 0.25 --source data/images
# display.Image(filename='runs/detect/exp/zidane.jpg', width=600)

# Download COCO val
torch.hub.download_url_to_file('https://ultralytics.com/assets/coco2017val.zip', 'tmp.zip')  # download (780M - 5000 images)
!unzip -q tmp.zip -d ../datasets && rm tmp.zip  # unzip

# Validate YOLOv5s on COCO val
!python val.py --weights yolov5s.pt --data coco.yaml --img 640 --half

# Train YOLOv5s on COCO128 for 3 epochs
!python train.py --img 640 --batch 16 --epochs 3 --data coco128.yaml --weights yolov5s.pt --cache

# YOLOv5 PyTorch HUB Inference (DetectionModels only)
import torch

model = torch.hub.load('ultralytics/yolov5', 'yolov5s')  # yolov5n - yolov5x6 or custom
im = 'https://ultralytics.com/images/zidane.jpg'  # file, Path, PIL.Image, OpenCV, nparray, list
results = model(im)  # inference
results.print()  # or .show(), .save(), .crop(), .pandas(), etc.